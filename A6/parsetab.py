
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '{\x9e\x1a\xc3\xe1gD(\xc2$\x10;\xc7,\x94\xa3'
    
_lr_action_items = {'DO':([11,13,14,15,17,18,19,21,28,40,44,45,46,48,49,55,64,67,],[-16,-20,-19,-17,-11,34,-18,-14,-29,-28,-15,-13,-12,-7,-8,-34,-25,-24,]),'THEN':([11,13,14,15,17,19,21,23,28,40,44,45,46,48,49,55,64,67,],[-16,-20,-19,-17,-11,-18,-14,39,-29,-28,-15,-13,-12,-7,-8,-34,-25,-24,]),'NUMBER':([4,9,10,12,16,30,32,33,35,36,41,56,],[11,11,11,27,11,11,11,11,11,11,27,11,]),'LBRACKET':([4,9,10,12,16,30,32,33,35,36,41,56,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'WHILE':([0,22,34,39,51,60,61,],[4,4,4,4,4,4,4,]),'FI':([3,5,6,7,11,13,14,15,17,19,21,24,28,38,40,44,45,46,48,49,55,57,64,66,67,68,],[-6,-3,-4,-5,-16,-20,-19,-17,-11,-18,-14,-21,-29,-2,-28,-15,-13,-12,-7,-8,-34,-22,-25,68,-24,-23,]),'MINUS':([11,13,14,15,17,18,19,21,23,24,28,31,40,43,44,45,46,48,49,55,64,67,],[-16,-20,-19,-17,-11,36,-18,-14,36,36,-29,36,-28,36,-15,-13,-12,-7,-8,-34,-25,-24,]),'CONCAT':([11,13,14,15,17,19,21,28,40,44,45,46,48,49,55,64,67,],[-16,-20,-19,-17,32,-18,-14,-29,-28,-15,-13,-12,32,32,-34,-25,-24,]),'RPAREN':([11,13,14,15,17,19,21,28,31,37,40,42,43,44,45,46,48,49,50,52,55,62,63,64,67,],[-16,-20,-19,-17,-11,-18,-14,-29,44,51,-28,55,-10,-15,-13,-12,-7,-8,-27,60,-34,-9,-26,-25,-24,]),'SEMICOLON':([3,5,6,7,11,13,14,15,17,19,21,24,28,40,44,45,46,48,49,55,57,64,67,68,],[-6,22,-4,-5,-16,-20,-19,-17,-11,-18,-14,-21,-29,-28,-15,-13,-12,-7,-8,-34,-22,-25,-24,-23,]),'PLUS':([11,13,14,15,17,18,19,21,23,24,28,31,40,43,44,45,46,48,49,55,64,67,],[-16,-20,-19,-17,-11,35,-18,-14,35,35,-29,35,-28,35,-15,-13,-12,-7,-8,-34,-25,-24,]),'COMMA':([11,13,14,15,17,19,21,26,27,28,29,40,43,44,45,46,48,49,50,55,64,67,],[-16,-20,-19,-17,-11,-18,-14,-32,-33,-29,41,-28,56,-15,-13,-12,-7,-8,58,-34,-25,-24,]),'$end':([1,3,5,6,7,8,11,13,14,15,17,19,21,24,28,38,40,44,45,46,48,49,55,57,64,67,68,],[-1,-6,-3,-4,-5,0,-16,-20,-19,-17,-11,-18,-14,-21,-29,-2,-28,-15,-13,-12,-7,-8,-34,-22,-25,-24,-23,]),'IDENT':([0,4,9,10,16,22,30,32,33,34,35,36,37,39,51,56,58,60,61,],[2,15,15,15,15,2,15,15,15,2,15,15,50,2,2,15,50,2,2,]),'END':([3,5,6,7,11,13,14,15,17,19,21,24,28,38,40,44,45,46,48,49,55,57,59,64,65,67,68,],[-6,-3,-4,-5,-16,-20,-19,-17,-11,-18,-14,-21,-29,-2,-28,-15,-13,-12,-7,-8,-34,-22,64,-25,67,-24,-23,]),'ELSE':([3,5,6,7,11,13,14,15,17,19,21,24,28,38,40,44,45,46,48,49,53,55,57,64,67,68,],[-6,-3,-4,-5,-16,-20,-19,-17,-11,-18,-14,-21,-29,-2,-28,-15,-13,-12,-7,-8,61,-34,-22,-25,-24,-23,]),'LPAREN':([4,9,10,15,16,20,30,32,33,35,36,56,],[16,16,16,30,16,37,16,16,16,16,16,16,]),'TIMES':([11,13,14,15,17,19,21,28,40,44,45,46,48,49,55,64,67,],[-16,-20,-19,-17,33,-18,-14,-29,-28,-15,-13,-12,33,33,-34,-25,-24,]),'IF':([0,22,34,39,51,60,61,],[9,9,9,9,9,9,9,]),'ASSIGNOP':([2,],[10,]),'OD':([3,5,6,7,11,13,14,15,17,19,21,24,28,38,40,44,45,46,47,48,49,55,57,64,67,68,],[-6,-3,-4,-5,-16,-20,-19,-17,-11,-18,-14,-21,-29,-2,-28,-15,-13,-12,57,-7,-8,-34,-22,-25,-24,-23,]),'RBRACKET':([12,25,26,27,28,29,40,54,],[28,40,-32,-33,-29,-31,-28,-30,]),'PROC':([4,9,10,16,30,32,33,35,36,56,],[20,20,20,20,20,20,20,20,20,20,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt_list':([0,22,34,39,51,60,61,],[1,38,47,53,59,65,66,]),'func_call':([4,9,10,16,30,32,33,35,36,56,],[14,14,14,14,14,14,14,14,14,14,]),'term':([4,9,10,16,30,35,36,56,],[17,17,17,17,17,48,49,17,]),'if_stmt':([0,22,34,39,51,60,61,],[3,3,3,3,3,3,3,]),'sequence':([12,41,],[25,54,]),'param_list':([37,58,],[52,63,]),'expr':([4,9,10,16,30,56,],[18,23,24,31,43,43,]),'list':([4,9,10,12,16,30,32,33,35,36,41,56,],[19,19,19,26,19,19,19,19,19,19,26,19,]),'stmt':([0,22,34,39,51,60,61,],[5,5,5,5,5,5,5,]),'assign_stmt':([0,22,34,39,51,60,61,],[6,6,6,6,6,6,6,]),'while_stmt':([0,22,34,39,51,60,61,],[7,7,7,7,7,7,7,]),'program':([0,],[8,]),'expr_list':([30,56,],[42,62,]),'listelement':([12,41,],[29,29,]),'proc':([4,9,10,16,30,32,33,35,36,56,],[13,13,13,13,13,13,13,13,13,13,]),'fact':([4,9,10,16,30,32,33,35,36,56,],[21,21,21,21,21,45,46,21,21,21,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','dynamic_interpreterext.py',130),
  ('stmt_list -> stmt SEMICOLON stmt_list','stmt_list',3,'p_stmt_list','dynamic_interpreterext.py',138),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','dynamic_interpreterext.py',139),
  ('stmt -> assign_stmt','stmt',1,'p_stmt','dynamic_interpreterext.py',148),
  ('stmt -> while_stmt','stmt',1,'p_stmt','dynamic_interpreterext.py',149),
  ('stmt -> if_stmt','stmt',1,'p_stmt','dynamic_interpreterext.py',150),
  ('expr -> expr PLUS term','expr',3,'p_add','dynamic_interpreterext.py',154),
  ('expr -> expr MINUS term','expr',3,'p_sub','dynamic_interpreterext.py',158),
  ('expr_list -> expr COMMA expr_list','expr_list',3,'p_expr_list','dynamic_interpreterext.py',162),
  ('expr_list -> expr','expr_list',1,'p_expr_list','dynamic_interpreterext.py',163),
  ('expr -> term','expr',1,'p_expr_term','dynamic_interpreterext.py',171),
  ('term -> term TIMES fact','term',3,'p_mult','dynamic_interpreterext.py',175),
  ('term -> term CONCAT fact','term',3,'p_term_CONCAT','dynamic_interpreterext.py',179),
  ('term -> fact','term',1,'p_term_fact','dynamic_interpreterext.py',183),
  ('fact -> LPAREN expr RPAREN','fact',3,'p_fact_expr','dynamic_interpreterext.py',187),
  ('fact -> NUMBER','fact',1,'p_fact_NUM','dynamic_interpreterext.py',191),
  ('fact -> IDENT','fact',1,'p_fact_IDENT','dynamic_interpreterext.py',195),
  ('fact -> list','fact',1,'p_fact_list','dynamic_interpreterext.py',199),
  ('fact -> func_call','fact',1,'p_fact_funcall','dynamic_interpreterext.py',203),
  ('fact -> proc','fact',1,'p_fact_proc','dynamic_interpreterext.py',207),
  ('assign_stmt -> IDENT ASSIGNOP expr','assign_stmt',3,'p_assn','dynamic_interpreterext.py',211),
  ('while_stmt -> WHILE expr DO stmt_list OD','while_stmt',5,'p_while','dynamic_interpreterext.py',215),
  ('if_stmt -> IF expr THEN stmt_list ELSE stmt_list FI','if_stmt',7,'p_if','dynamic_interpreterext.py',219),
  ('proc -> PROC LPAREN param_list RPAREN stmt_list END','proc',6,'p_proc','dynamic_interpreterext.py',223),
  ('proc -> PROC LPAREN RPAREN stmt_list END','proc',5,'p_proc','dynamic_interpreterext.py',224),
  ('param_list -> IDENT COMMA param_list','param_list',3,'p_param_list','dynamic_interpreterext.py',231),
  ('param_list -> IDENT','param_list',1,'p_param_list','dynamic_interpreterext.py',232),
  ('list -> LBRACKET sequence RBRACKET','list',3,'p_list','dynamic_interpreterext.py',240),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','dynamic_interpreterext.py',241),
  ('sequence -> listelement COMMA sequence','sequence',3,'p_sequence','dynamic_interpreterext.py',248),
  ('sequence -> listelement','sequence',1,'p_sequence','dynamic_interpreterext.py',249),
  ('listelement -> list','listelement',1,'p_listelement','dynamic_interpreterext.py',283),
  ('listelement -> NUMBER','listelement',1,'p_listelement','dynamic_interpreterext.py',284),
  ('func_call -> IDENT LPAREN expr_list RPAREN','func_call',4,'p_func_call','dynamic_interpreterext.py',288),
]
