Group 8
Assignment 4 - Mini Language Compiler V2

This program uses the same files as the original Mini Compiler Assignment.  However, the programext.py and link.py are modified to support compiling instructions for functions.  The RAL instructions are created in the Proc and FunCall classes.  The Memory class has also been modified to support storing scratch space, a stack pointer and a frame pointer.  Finally, each of the translate methods have been modified to pass the Memory object through them.  This allows a function to mimic a Memory space for itself, thus providing an activation record.  

The memory is outlined as SP, FP, Scratch 1-5, then Constants, and then the
activation records. The activation records start at the high indecies and go
to the low, so viewing it may make it appear as if it is upside down. This
means the first element will be the return address and the last will be the
parameters.

The program is laid out as main followed by HLT followed by all of the
functions.

Each type of stmt translates as a tuple. The first element is the code that
is inserted in place and the second is the code to be inserted at the end of
the file (procedures), so you can declare procedures within any kind of stmt
